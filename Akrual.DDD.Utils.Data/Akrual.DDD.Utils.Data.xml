<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Akrual.DDD.Utils.Data</name>
    </assembly>
    <members>
        <member name="M:Akrual.DDD.Utils.Data.EventStore.Logger.NLoggerImpl.Error(System.String,System.Object[])">
            <summary>
            Writes an error to the logger
            </summary>
            <param name="format">Format string for the log message.</param>
            <param name="args">Arguments to be inserted into the format string.</param>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.EventStore.Logger.NLoggerImpl.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Writes an error to the logger
            </summary>
            <param name="ex">A thrown exception.</param>
            <param name="format">Format string for the log message.</param>
            <param name="args">Arguments to be inserted into the format string.</param>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.EventStore.Logger.NLoggerImpl.Debug(System.String,System.Object[])">
            <summary>
            Writes a debug message to the logger
            </summary>
            <param name="format">Format string for the log message.</param>
            <param name="args">Arguments to be inserted into the format string.</param>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.EventStore.Logger.NLoggerImpl.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Writes a debug message to the logger
            </summary>
            <param name="ex">A thrown exception.</param>
            <param name="format">Format string for the log message.</param>
            <param name="args">Arguments to be inserted into the format string.</param>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.EventStore.Logger.NLoggerImpl.Info(System.String,System.Object[])">
            <summary>
            Writes an information message to the logger
            </summary>
            <param name="format">Format string for the log message.</param>
            <param name="args">Arguments to be inserted into the format string.</param>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.EventStore.Logger.NLoggerImpl.Info(System.Exception,System.String,System.Object[])">
            <summary>
            Writes an information message to the logger
            </summary>
            <param name="ex">A thrown exception.</param>
            <param name="format">Format string for the log message.</param>
            <param name="args">Arguments to be inserted into the format string.</param>
        </member>
        <member name="T:Akrual.DDD.Utils.Data.Repositories.AsyncDomainRepositoryBase`2">
            <summary>
            Base class for implementing asynchronous domain repositories for aggregate root types.
            </summary>
            <typeparam name="TAggregate">The type of the aggregate root.</typeparam>
            <typeparam name="T">The type of the aggregate root Inner object.</typeparam>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.Repositories.AsyncDomainRepositoryBase`2.#ctor(Akrual.DDD.Utils.Data.Repositories.DbContexts.DBContextOfAggregate)">
            <summary>
            Initializes a new instance of the <see cref="!:DomainRepositoryBase&lt;TAggregate&gt;"/> class.
            </summary>
        </member>
        <member name="M:Akrual.DDD.Utils.Data.Repositories.AsyncDomainRepositoryBase`2.FindByIdAsync(System.Guid)">
            <summary>
            Asynchronously finds an aggregate root instance from the repository using its id.
            </summary>
            <param name="id">Aggregate root instance id.</param>
            <returns>Aggregate root instance.</returns>
        </member>
    </members>
</doc>
